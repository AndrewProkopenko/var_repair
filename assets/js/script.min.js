(function(){
    const anchors = document.querySelectorAll('a[href*="#"]'); 

    var ua = navigator.userAgent;  
    if (ua.search(/MSIE/) > 0) { console.log(ua) }
    else {  
        for( let anchor = 0 ; anchor < anchors.length; anchor++) { 
            anchors[anchor].addEventListener("click", function(event) { 
               
                const blockID =  anchors[anchor].getAttribute('href');
                event.preventDefault(); 
                document.querySelector('' + blockID).scrollIntoView({
                    behavior: "smooth", 
                    block: "start"
                })
            })
        }
    }
}());
 
$(document).ready(function () {
  $(".navbar-nav a").click(function (e) {
      e.preventDefault(); 
      $('.navbar-collapse.show').collapse('hide');
      $('.js-navbar-toggle span').toggleClass('d-none')
  $('.js-navbar-toggle svg').toggleClass('d-none') 
  });
});
      
$('.js-navbar-toggle').click( headerBtnTimes)

function headerBtnTimes() { 
$('.js-navbar-toggle span').toggleClass('d-none')
$('.js-navbar-toggle svg').toggleClass('d-none')
}
 
  
let modalBtn = document.querySelectorAll('.js-modal-btn a'),
    modalCont = document.querySelector('.js-modal'),
    modalCloseCont = document.querySelector('.js-modal .service-modal-container'),
    modalCloseIcon = document.querySelectorAll('.modal-close'); 
let modalContact = document.querySelector('.service-modal-container_contact'); 

 
for (let i = 0 ; i < modalBtn.length; i++) { 
    modalBtn[i].addEventListener('click', openModal)
}
 
for (let i = 0 ; i < modalCloseIcon.length; i++) { 
    modalCloseIcon[i].addEventListener('click', closeModal)
}

modalCont.addEventListener('click', closeModalProps) 
 
 

function openModal(e) {  
    document.body.classList.add('overflow-hidden')
    e.preventDefault()
    modalCont.classList.add('show') 
}

function closeModal() {  
    document.body.classList.remove('overflow-hidden')
    modalCont.classList.remove('show')  
    modalContact.classList.remove('hide') 
}
function closeModalProps(e) {  
    if( e.target == modalCont ||  e.target == modalCloseCont) { 
        document.body.classList.remove('overflow-hidden');
        modalCont.classList.remove('show'); 
        modalContact.classList.remove('hide');
    }  
}
 
 
    new Selectr('#yourcity', { 
        searchable: false
    }); 
 
    new Selectr('#brands', { 
        searchable: false
    }); 
 
    
    $(document).ready(function(){
      $(".owl-carousel").owlCarousel({ 
        loop: true,  
        nav: true,  
        dotsEach: true,
        responsive: {
          0:{
              items:1,
              margin: 0,
          }
          
      }
      });
    });
$(window).scroll(function() {
    if ($(this).scrollTop() > 1){  
        $('header').addClass("sticky");
    }
    else{
        $('header').removeClass("sticky");
    }
});
let tableRow = document.querySelectorAll('.service-table tbody tr'), 
    tableBtn = document.querySelector('.js-table-btn'),
    tableBtnLink = document.querySelector('.js-table-btn a'),
    flag = 0; 


for (let i = 0 ; i< tableRow.length; i++) { 
    if( i >= 6) { 
        tableRow[i].classList.add('d-none')
    }
} 

tableBtn.addEventListener('click', moreRow) 

for(let i = 0; i<tableRow.length; i++) { 
    tableRow[i].addEventListener('click', openModal)
}
function moreRow (e) { 
    e.preventDefault()
    // console.log('ie')
    if(flag == 0) {  
         for (let i = 0 ; i< tableRow.length; i++) { 
            tableRow[i].classList.remove('d-none') 
        }
      
        tableBtnLink.innerHTML = "Скрыть";
        flag = 1; 
    }
    else { 
        for (let i = 0 ; i< tableRow.length; i++) { 
            if( i >= 6) { 
                tableRow[i].classList.add('d-none')
            }
        }
      
        tableBtnLink.innerHTML = "Увидеть все поломки";
        flag = 0;
    }
   
}

        let timerBodyHeading = document.querySelector('#js-timer-heading') 
        let noTimer = document.querySelectorAll('.js-no-timer-hide')    

        let hour1 = document.querySelector('.body-timer .hour span:first-child')
        let hour2 = document.querySelector('.body-timer .hour span:last-child')
        let minute1 = document.querySelector('.body-timer .minute span:first-child')
        let minute2 = document.querySelector('.body-timer .minute span:last-child')
        let second1 = document.querySelector('.body-timer .second span:first-child')
        let second2 = document.querySelector('.body-timer .second span:last-child')

        function timeUpdate() { 
            setInterval(function() { 
                let today = new Date(); 
                let hoursNow = today.getHours() 
                if (hoursNow > 12 && hoursNow < 17) { 
                     timeWrite(today)
                } else { 
                    timerBodyHeading.innerHTML = "Акция скоро возобновится!"
                    timerBodyHeading.classList.add('text-center')
                    for(let i = 0; i<noTimer.length; i++) { 
                        noTimer[i].classList.add('d-none')
                    }
                }   
            }, 1000)
           
        }

        function timeWrite(time) { 
            let time16 = new Date(); 
            time16.setHours(16)
            time16.setMinutes(0)
            time16.setSeconds(0)

            let minusDate = time - time16;
            minusDate = minusDate * -1;
           
            msToTime(minusDate)
 
           
        }

        function msToTime(duration) {
            // console.log(duration)
            var milliseconds = parseInt((duration % 1000) / 100),
                seconds = parseInt((duration / 1000) % 60),
                minutes = parseInt((duration / (1000 * 60)) % 60),
                hours = parseInt((duration / (1000 * 60 * 60)) % 24);

            hours = (hours < 10) ? "0" + hours : hours;
            minutes = (minutes < 10) ? "0" + minutes : minutes;
            seconds = (seconds < 10) ? "0" + seconds : seconds;
            hours = hours.toString()
            minutes = minutes.toString()
            seconds = seconds.toString()
                // console.log(hours + ":" + minutes + ":" + seconds  )
                // console.log( minutes )
            // return hours + ":" + minutes + ":" + seconds + "." + milliseconds;
            hour1.innerHTML = hours[0] || ''
            hour2.innerHTML = hours[1] || ''
            minute1.innerHTML = minutes[0] || ''
            minute2.innerHTML = minutes[1] || ''
            second1.innerHTML = seconds[0] || ''
            second2.innerHTML = seconds[1]  || ''
        }
       
            
        timeUpdate() 